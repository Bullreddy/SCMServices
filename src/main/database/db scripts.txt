CREATE DATABASE IF NOT EXISTS scm;

USE scm;

CREATE TABLE IF NOT EXISTS `classification`( `id` INT(10) NOT NULL, `code` VARCHAR(50) NOT NULL, `name` VARCHAR(200) NOT NULL, `type` ENUM('CASTE','TRADE','PHASE','ACADEMIC_YEAR','CERTIFICATE','TYPE'), `date_created` DATETIME, `date_modified` DATETIME, PRIMARY KEY (`id`) ); 

insert into `classification` (`id`, `code`, `name`, `type`, `date_created`, `date_modified`) values('1','BC','BC','CASTE','2018-03-31 11:00:53','2018-03-31 11:00:59');
insert into `classification` (`id`, `code`, `name`, `type`, `date_created`, `date_modified`) values('2','OC','OC','CASTE','2018-03-31 11:00:53','2018-03-31 11:00:53');
insert into `classification` (`id`, `code`, `name`, `type`, `date_created`, `date_modified`) values('3','PHASE1','Phase1','PHASE','2018-03-31 11:00:53','2018-03-31 11:00:53');
insert into `classification` (`id`, `code`, `name`, `type`, `date_created`, `date_modified`) values('4','PHASE2','Phase2','PHASE','2018-03-31 11:00:53','2018-03-31 11:00:53');
insert into `classification` (`id`, `code`, `name`, `type`, `date_created`, `date_modified`) values('5','2018','2018','ACADEMIC_YEAR','2018-05-09 22:45:17','2018-05-09 22:45:21');
insert into `classification` (`id`, `code`, `name`, `type`, `date_created`, `date_modified`) values('6','2017','2017','ACADEMIC_YEAR','2018-05-09 22:45:46','2018-05-09 22:45:48');
insert into `classification` (`id`, `code`, `name`, `type`, `date_created`, `date_modified`) values('7','ELEC','Electrical','TRADE','2018-05-09 22:46:26','2018-05-09 22:46:29');
insert into `classification` (`id`, `code`, `name`, `type`, `date_created`, `date_modified`) values('8','MECH','Mechanical','TRADE','2018-05-09 22:46:51','2018-05-09 22:46:54');
insert into `classification` (`id`, `code`, `name`, `type`, `date_created`, `date_modified`) values('9','REGULAR','Regular','TYPE','2018-05-09 22:57:33','2018-05-09 22:57:36');
insert into `classification` (`id`, `code`, `name`, `type`, `date_created`, `date_modified`) values('10','PARTTIME','Part Time','TYPE','2018-05-09 23:01:04','2018-05-09 23:01:09');

CREATE TABLE admission
(	
	id int,
	admission_no varchar(50),
	registration_no varchar(50),
	academic_year int,
	phase int,
	name varchar(200),
	father_name varchar(200),
	mother_name varchar(200),
	present_address varchar(350),
	mobile_no NUMERIC,
	alternate_mobile_no NUMERIC,
	email varchar(100),
	trade int,
	caste int,
	dob date,
	scholarship char,
	photo_sbmtd char,
	admission_date date,
	gender char,
	type int,
	shift varchar(10),
	unit varchar(10),
	UID_Number varchar(25),
	highest_qualification varchar(50),
	dual_mode char,
	identification_marks varchar(350),
	FOREIGN KEY (academic_year) REFERENCES classification(ID),
	FOREIGN KEY (phase) REFERENCES classification(ID),
	FOREIGN KEY (trade) REFERENCES classification(ID),
	FOREIGN KEY (caste) REFERENCES classification(ID)
);

ALTER TABLE admission ADD CONSTRAINT FOREIGN KEY (TYPE) REFERENCES classification(id);
ALTER TABLE admission ADD PRIMARY KEY (id);
ALTER TABLE admission MODIFY COLUMN id INT NOT NULL auto_increment;

CREATE TABLE IF NOT EXISTS `user`( `id` INT(10) NOT NULL, `username` VARCHAR(100) NOT NULL, 
`password` VARCHAR(100) NOT NULL,`email` VARCHAR(100) NOT NULL,
`contact_no` NUMERIC, PRIMARY KEY (`id`) ); 


//password:welcome
insert into `user` (`id`, `username`, `password`, `email`, `contact_no`) 
values('1','admin','$2a$04$HYK2s1ChruRfIq1dhqCPN.Li12XMFFK1B7Aj6JDhM1PaPGZL674gC','user@gmail.com',12345678);



USE SCM;
CREATE TABLE IF NOT EXISTS `DATASOURCECONFIG`( `id` INT(10) NOT NULL, `name` VARCHAR(100) NOT NULL, 
`username` VARCHAR(100) NOT NULL,`password` VARCHAR(100) , `url` VARCHAR(100) NOT NULL,`driverclassname` VARCHAR(100) NOT NULL,
`initialize` BOOL,PRIMARY KEY (`id`) ); 

INSERT INTO `DATASOURCECONFIG` VALUES (1, 'SCMDB', 'root', 'root', 'jdbc:mysql://localhost:3306/scm1','com.mysql.jdbc.Driver', true);

ALTER TABLE classification MODIFY `type` ENUM('CASTE','TRADE','PHASE','ACADEMIC_YEAR','CERTIFICATE','TYPE','SCHOLARSHIP','BRANCH');
insert into `classification` (`id`, `code`, `name`, `type`, `date_created`, `date_modified`) values('11','Yes','Yes','SCHOLARSHIP','2018-05-09 22:57:33','2018-05-09 22:57:36');
insert into `classification` (`id`, `code`, `name`, `type`, `date_created`, `date_modified`) values('12','No','No','SCHOLARSHIP','2018-05-09 23:01:04','2018-05-09 23:01:09');


CREATE TABLE certificates(id int,code varchar(100),name varchar(200),type int,FOREIGN KEY (type) REFERENCES classification(ID));

INSERT INTO certificates(id,code,name,type) values (1,"10th","Tenth Class",(SELECT ID FROM classification where type = "SCHOLARSHIP" and CODE="Yes"));
INSERT INTO certificates(id,code,name,type) values (2,"12th","Twelth Class",(SELECT ID FROM classification where type = "SCHOLARSHIP" and CODE="Yes"));
INSERT INTO certificates(id,code,name,type) values (3,"Address","Address",(SELECT ID FROM classification where type = "SCHOLARSHIP" and CODE="No"));
INSERT INTO certificates(id,code,name,type) values (4,"Caste","Caste",(SELECT ID FROM classification where type = "SCHOLARSHIP" and CODE="Yes"));
INSERT INTO certificates(id,code,name,type) values (5,"BIRTHCERT","Birth Certificate",null);

insert into `classification` (`id`, `code`, `name`, `type`, `date_created`, `date_modified`) values('13','BRANCH1','Branch 1','BRANCH','2018-05-09 22:57:33','2018-05-09 22:57:36');
insert into `classification` (`id`, `code`, `name`, `type`, `date_created`, `date_modified`) values('14','BRANCH2','Branch 2','BRANCH','2018-05-09 23:01:04','2018-05-09 23:01:09');


ALTER TABLE classification ADD branchid int references classification(id);

SET SQL_SAFE_UPDATES = 0;
update classification set branchid = 13 where id in (select x.id from (select id from classification where type <> 'BRANCH') as x);


ALTER TABLE `scm`.`certificates` 
ADD PRIMARY KEY (`id`);


ALTER TABLE admission MODIFY scholarship int;
ALTER TABLE admission add foreign key (scholarship) References Classification(id);


ALTER TABLE admission ADD category varchar(50);


create table student_certificates(id int not null,studentid int,certificateid int, foreign key  (studentid) references admission(id) ON DELETE SET NULL
    ON UPDATE CASCADE,foreign key (certificateid) references certificates(id) ON DELETE SET NULL
    ON UPDATE CASCADE);
    
    ALTER TABLE `scm`.`certificates` 
CHANGE COLUMN `id` `id` INT(11) NOT NULL ,
ADD PRIMARY KEY (`id`);


DROP PROCEDURE IF EXISTS scm.getstudents;
CREATE PROCEDURE scm.`getstudents`(in phase int,in trade int,in years int)
BEGIN
   SELECT a.id ,
        a.UID_Number ,
        a.phase ,
        a.academic_year ,
        a.admission_date ,
        a.admission_no ,
        a.alternate_mobile_no,
        a.caste ,
        a.category ,
        a.dob ,
        a.dual_mode,
        a.email ,
        a.father_name ,
        a.gender ,
        a.highest_qualification ,
        a.identification_marks ,
        a.mobile_no ,
        a.mother_name ,
        a.name ,
        a.photo_sbmtd ,
        a.present_address ,
        a.registration_no ,
        a.scholarship ,
        a.shift ,
        a.trade ,
        a.type ,
        a.unit   FROM admission a WHERE a.phase LIKE 
    CASE WHEN phase = 0 THEN 
   '%'
     ELSE 
     phase
     END
    AND a.trade LIKE
      CASE WHEN trade = 0 THEN 
     '%'
     ELSE 
     trade
     END
     AND a.academic_year LIKE
       CASE WHEN years = 0 THEN 
      '%'
     ELSE 
     years
     END;
   END;
   
  CREATE TABLE `scm`.`fee_details` (
  `id` INT NOT NULL,
  `student_id` INT NOT NULL,
  `amount` DECIMAL(9,2) NOT NULL,
  `year_id` INT(10) NULL,
  `collected_by` INT NULL,
  `created_by` VARCHAR(45) NULL,
  `created_date` DATETIME NULL,
  PRIMARY KEY (`id`),
  INDEX `student_id_fk1_idx` (`student_id` ASC),
  INDEX `collected_by_fk2_idx` (`collected_by` ASC),
  INDEX `fee_detail_fk3_idx` (`year_id` ASC),
  CONSTRAINT `student_id_fk1`
    FOREIGN KEY (`student_id`)
    REFERENCES `scm`.`admission` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `collected_by_fk2`
    FOREIGN KEY (`collected_by`)
    REFERENCES `scm`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fee_detail_fk3`
    FOREIGN KEY (`year_id`)
    REFERENCES `scm`.`classification` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
	);
	
	
	
	use scm;
ALTER TABLE classification MODIFY COLUMN type ENUM('CASTE','TRADE','PHASE','ACADEMIC_YEAR','CERTIFICATE','TYPE','SCHOLARSHIP','BRANCH','FEE_YEAR');

insert into `classification` (`id`, `code`, `name`, `type`, `date_created`, `date_modified`) values('15','YEAR1','YEAR1','FEE_YEAR','2018-05-09 22:57:33','2018-05-09 22:57:36','13');
insert into `classification` (`id`, `code`, `name`, `type`, `date_created`, `date_modified`) values('16','YEAR2','YEAR2','FEE_YEAR','2018-05-09 23:01:04','2018-05-09 23:01:09','13');
	
INSERT INTO `scm`.`fee_details` (`id`, `student_id`, `amount`, `year_id`, `collected_by`, `created_by`, `created_date`) VALUES ('2', '1', '10000.00', '13', '1', '1', '2018-03-31 11:00:53');
	
INSERT INTO `scm`.`fee_details` (`id`, `student_id`, `amount`, `year_id`, `collected_by`, `created_by`, `created_date`) VALUES ('1', '1', '10000.00', '13', '1', '1', '2018-03-31 11:00:53');
  